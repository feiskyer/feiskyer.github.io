<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>container on Feisky</title>
    <link>https://feisky.xyz/tags/container/</link>
    <description>Recent content in container on Feisky</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 19 Jul 2016 15:58:26 +0000</lastBuildDate><atom:link href="https://feisky.xyz/tags/container/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setup hyperd with flannel network</title>
      <link>https://feisky.xyz/posts/2016-07-19-setup-hyperd-with-flannel-network/</link>
      <pubDate>Tue, 19 Jul 2016 15:58:26 +0000</pubDate>
      
      <guid>https://feisky.xyz/posts/2016-07-19-setup-hyperd-with-flannel-network/</guid>
      <description>Flannel Flannel is a virtual network that gives a subnet to each host for use with container runtimes.
Platforms like Google&amp;rsquo;s Kubernetes assume that each container (pod) has a unique, routable IP inside the cluster. The advantage of this model is that it reduces the complexity of doing port mapping.
flannel runs an agent, flanneld, on each host and is responsible for allocating a subnet lease out of a preconfigured address space.</description>
    </item>
    
    <item>
      <title>Reading notes of week 17</title>
      <link>https://feisky.xyz/posts/2016-04-29-reading-notes-of-week-17/</link>
      <pubDate>Fri, 29 Apr 2016 16:50:14 +0000</pubDate>
      
      <guid>https://feisky.xyz/posts/2016-04-29-reading-notes-of-week-17/</guid>
      <description>SIG-Networking: Kubernetes Network Policy APIs Coming in 1.3 One problem many users have is that the open access network policy of Kubernetes is not suitable for applications that need more precise control over the traffic that accesses a pod or service. Today, this could be a multi-tier application where traffic is only allowed from a tier’s neighbor. But as new Cloud Native applications are built</description>
    </item>
    
    <item>
      <title>runc and runV</title>
      <link>https://feisky.xyz/posts/2016-04-28-runc/</link>
      <pubDate>Thu, 28 Apr 2016 11:15:03 +0000</pubDate>
      
      <guid>https://feisky.xyz/posts/2016-04-28-runc/</guid>
      <description>runc is a CLI tool for spawning and running containers according to the OCI specification, while runV is a hypervisor-based runtime for OCI. Both of them are recommanded (implementations](https://github.com/opencontainers/runtime-spec/blob/master/implementations.md) of OCI.
Playing with runc Install runc:
yum install -y libseccomp-devel mkdir -p $GOPATH/src/github.com/opencontainers cd $GOPATH/src/github.com/opencontainers git clone https://github.com/opencontainers/runc cd runc make sudo make install Run busybox:
$ docker pull busybox $ mkdir rootfs $ docker export $(docker create busybox) | tar -C rootfs -xvf - $ runc spec .</description>
    </item>
    
    <item>
      <title>Container runtime in Docker v1.11</title>
      <link>https://feisky.xyz/posts/2016-04-28-docker-1-11-runtime/</link>
      <pubDate>Thu, 28 Apr 2016 10:07:23 +0000</pubDate>
      
      <guid>https://feisky.xyz/posts/2016-04-28-docker-1-11-runtime/</guid>
      <description>Docker v1.11正式集成了runc（终于支持OCI了），并将原来的一个二进制文件拆分为多个，同时还保持docker CLI和API不变： docker docker-containerd docker-containerd-shim docker-runc docker-containerd-ctr</description>
    </item>
    
  </channel>
</rss>
