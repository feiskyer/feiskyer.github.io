<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Container on Feisky</title><link>https://feisky.xyz/tags/container/</link><description>Recent content in Container on Feisky</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 19 Jul 2016 15:58:26 +0000</lastBuildDate><atom:link href="https://feisky.xyz/tags/container/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup hyperd with flannel network</title><link>https://feisky.xyz/posts/2016-07-19-setup-hyperd-with-flannel-network/</link><pubDate>Tue, 19 Jul 2016 15:58:26 +0000</pubDate><guid>https://feisky.xyz/posts/2016-07-19-setup-hyperd-with-flannel-network/</guid><description>&lt;h1 id="flannel">Flannel&lt;/h1>
&lt;p>Flannel is a virtual network that gives a subnet to each host for use with container runtimes.&lt;/p>
&lt;p>Platforms like Google&amp;rsquo;s Kubernetes assume that each container (pod) has a unique, routable IP inside the cluster. The advantage of this model is that it reduces the complexity of doing port mapping.&lt;/p>
&lt;p>flannel runs an agent, flanneld, on each host and is responsible for allocating a subnet lease out of a preconfigured address space. flannel uses etcd to store the network configuration, allocated subnets, and auxiliary data (such as host&amp;rsquo;s IP). The forwarding of packets is achieved using one of several strategies that are known as backends. The simplest backend is udp and uses a TUN device to encapsulate every IP fragment in a UDP packet, forming an overlay network. The following diagram demonstrates the path a packet takes as it traverses the overlay network:&lt;/p></description></item><item><title>Reading notes of week 17</title><link>https://feisky.xyz/posts/2016-04-29-reading-notes-of-week-17/</link><pubDate>Fri, 29 Apr 2016 16:50:14 +0000</pubDate><guid>https://feisky.xyz/posts/2016-04-29-reading-notes-of-week-17/</guid><description>&lt;p>&lt;strong>&lt;a href="http://blog.kubernetes.io/2016/04/Kubernetes-Network-Policy-APIs.html">SIG-Networking: Kubernetes Network Policy APIs Coming in 1.3&lt;/a>&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>One problem many users have is that the open access network policy of Kubernetes is not suitable for applications that need more precise control over the traffic that accesses a pod or service. Today, this could be a multi-tier application where traffic is only allowed from a tier’s neighbor. But as new Cloud Native applications are built by composing microservices, the ability to control traffic as it flows among these services becomes even more critical.&lt;/p></description></item><item><title>runc and runV</title><link>https://feisky.xyz/posts/2016-04-28-runc/</link><pubDate>Thu, 28 Apr 2016 11:15:03 +0000</pubDate><guid>https://feisky.xyz/posts/2016-04-28-runc/</guid><description>&lt;p>runc is a CLI tool for spawning and running containers according to the OCI specification, while runV is a hypervisor-based runtime for OCI. Both of them are recommanded (implementations](&lt;a href="https://github.com/opencontainers/runtime-spec/blob/master/implementations.md">https://github.com/opencontainers/runtime-spec/blob/master/implementations.md&lt;/a>) of OCI.&lt;/p>
&lt;h2 id="playing-with-runc">Playing with runc&lt;/h2>
&lt;p>Install runc:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>yum install -y libseccomp-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p $GOPATH/src/github.com/opencontainers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd $GOPATH/src/github.com/opencontainers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/opencontainers/runc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd runc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run busybox:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ docker pull busybox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ mkdir rootfs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker export &lt;span style="color:#66d9ef">$(&lt;/span>docker create busybox&lt;span style="color:#66d9ef">)&lt;/span> | tar -C rootfs -xvf -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ runc spec .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ runc start test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/ &lt;span style="color:#75715e"># ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PID USER COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> root sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">9&lt;/span> root ps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="playing-with-docker-containerd">Playing with docker-containerd&lt;/h2>
&lt;p>docker-containerd is installed togather with docker 1.11.&lt;/p></description></item><item><title>Container runtime in Docker v1.11</title><link>https://feisky.xyz/posts/2016-04-28-docker-1-11-runtime/</link><pubDate>Thu, 28 Apr 2016 10:07:23 +0000</pubDate><guid>https://feisky.xyz/posts/2016-04-28-docker-1-11-runtime/</guid><description>&lt;p>Docker v1.11正式集成了runc（终于支持OCI了），并将原来的一个二进制文件拆分为多个，同时还保持docker CLI和API不变：&lt;/p>
&lt;ul>
&lt;li>docker&lt;/li>
&lt;li>docker-containerd&lt;/li>
&lt;li>docker-containerd-shim&lt;/li>
&lt;li>docker-runc&lt;/li>
&lt;li>docker-containerd-ctr&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://feisky.xyz/images/docker-v11.png" alt="">&lt;/p></description></item></channel></rss>